//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.Deer
{

public sealed partial class CarEntityData :  Bright.Config.BeanBase 
{
    public CarEntityData(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        CellNum = _buf.ReadUnityVector3();
        CellSize = _buf.ReadUnityVector3();
        AssetPath = _buf.ReadString();
        Name = _buf.ReadString();
        MoveDirection = _buf.ReadInt();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);VictoryPos = new System.Collections.Generic.List<UnityEngine.Vector2>(n);for(var i = 0 ; i < n ; i++) { UnityEngine.Vector2 _e;  _e = _buf.ReadUnityVector2(); VictoryPos.Add(_e);}}
        RayOffset = _buf.ReadUnityVector3();
        PostInit();
    }

    public static CarEntityData DeserializeCarEntityData(ByteBuf _buf)
    {
        return new Deer.CarEntityData(_buf);
    }

    /// <summary>
    /// 唯一标识
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 格子数量
    /// </summary>
    public UnityEngine.Vector3 CellNum { get; private set; }
    /// <summary>
    /// 格子数量
    /// </summary>
    public UnityEngine.Vector3 CellSize { get; private set; }
    /// <summary>
    /// 实体的路径
    /// </summary>
    public string AssetPath { get; private set; }
    /// <summary>
    /// 实体的名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 移动类型
    /// </summary>
    public int MoveDirection { get; private set; }
    /// <summary>
    /// 胜利位置
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> VictoryPos { get; private set; }
    /// <summary>
    /// 射线长度
    /// </summary>
    public UnityEngine.Vector3 RayOffset { get; private set; }

    public const int __ID__ = 1689791521;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "CellNum:" + CellNum + ","
        + "CellSize:" + CellSize + ","
        + "AssetPath:" + AssetPath + ","
        + "Name:" + Name + ","
        + "MoveDirection:" + MoveDirection + ","
        + "VictoryPos:" + Bright.Common.StringUtil.CollectionToString(VictoryPos) + ","
        + "RayOffset:" + RayOffset + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
